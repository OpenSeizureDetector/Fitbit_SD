import DiagnosticList from './DiagnosticList';
export declare enum AppType {
    APP = "app",
    CLOCKFACE = "clockface"
}
export declare const VALID_APP_TYPES: any[];
export declare type LocalesConfig = {
    [locale: string]: {
        name: string;
    };
};
export interface BaseProjectConfiguration {
    appType: AppType;
    appDisplayName: string;
    appUUID: string;
    requestedPermissions: string[];
    i18n: LocalesConfig;
    defaultLanguage: string;
    buildTargets: string[];
    enableProposedAPI?: true;
}
export interface AppProjectConfiguration extends BaseProjectConfiguration {
    appType: AppType.APP;
    wipeColor: string;
    iconFile: string;
}
export interface ClockProjectConfiguration extends BaseProjectConfiguration {
    appType: AppType.CLOCKFACE;
}
declare type ProjectConfiguration = AppProjectConfiguration | ClockProjectConfiguration;
export default ProjectConfiguration;
export declare const MAX_DISPLAY_NAME_LENGTH = 30;
export declare const LOCALES: Readonly<{
    en: string;
    de: string;
    es: string;
    fr: string;
    it: string;
    ja: string;
    ko: string;
    nl: string;
    sv: string;
    'zh-cn': string;
    'zh-tw': string;
}>;
export declare function normalizeProjectConfig(config: any, defaults?: Partial<AppProjectConfiguration & ClockProjectConfiguration>): ProjectConfiguration;
export declare function validateAppType(config: ProjectConfiguration): DiagnosticList;
export declare function validateDisplayName(name: string): string | true;
export declare function validateProjectDisplayName(config: ProjectConfiguration): DiagnosticList;
export declare function validateWipeColor(config: ProjectConfiguration): DiagnosticList;
export declare function validateRequestedPermissions({ requestedPermissions, }: ProjectConfiguration): DiagnosticList;
export declare function validateBuildTarget({ buildTargets }: ProjectConfiguration): DiagnosticList;
export declare function validateLocaleDisplayName({ i18n }: ProjectConfiguration, localeKey: keyof typeof LOCALES): DiagnosticList;
export declare function validateLocaleDisplayNames(config: ProjectConfiguration): DiagnosticList;
export declare function validateSupportedLocales({ i18n }: ProjectConfiguration): DiagnosticList;
export declare function validateAppUUID({ appUUID }: ProjectConfiguration): DiagnosticList;
export declare function validateDefaultLanguage(config: ProjectConfiguration): DiagnosticList;
export declare function validate(config: ProjectConfiguration): DiagnosticList;
