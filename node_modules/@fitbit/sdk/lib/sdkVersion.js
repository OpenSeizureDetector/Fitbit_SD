"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const semver_1 = tslib_1.__importDefault(require("semver"));
const packageVersion_const_1 = tslib_1.__importDefault(require("./packageVersion.const"));
function sdkVersion(toolchainVersion = packageVersion_const_1.default) {
    const version = semver_1.default.parse(toolchainVersion);
    if (version === null) {
        throw new Error(`Invalid SDK package version: ${toolchainVersion}`);
    }
    version.patch = 0;
    version.prerelease = [];
    version.format();
    return version;
}
exports.default = sdkVersion;
function apiVersions({ enableProposedAPI } = {}, toolchainVersion = packageVersion_const_1.default) {
    if (enableProposedAPI)
        return { deviceApi: '*', companionApi: '*' };
    const { major, minor } = sdkVersion(toolchainVersion);
    if (major === 1 && minor === 0) {
        return { deviceApi: '1.0.0', companionApi: '1.0.0' };
    }
    if (major === 2 && minor === 0) {
        return { deviceApi: '3.0.0', companionApi: '2.0.0' };
    }
    if (major === 3 && minor === 0) {
        return { deviceApi: '4.0.0', companionApi: '2.1.0' };
    }
    throw new Error(`No known API versions for SDK package version ${major}.${minor}`);
}
exports.apiVersions = apiVersions;
