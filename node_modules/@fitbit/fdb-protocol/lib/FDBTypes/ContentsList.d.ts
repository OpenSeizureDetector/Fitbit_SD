import * as t from 'io-ts';
export declare const AppComponentContentsList: t.InterfaceType<{
    files: t.DictionaryType<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>, t.TypeOfDictionary<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>>, t.OutputOfDictionary<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>>, unknown>;
}, t.TypeOfProps<{
    files: t.DictionaryType<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>, t.TypeOfDictionary<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>>, t.OutputOfDictionary<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>>, unknown>;
}>, t.OutputOfProps<{
    files: t.DictionaryType<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>, t.TypeOfDictionary<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>>, t.OutputOfDictionary<t.StringType, t.InterfaceType<{
        sha256: t.StringType;
    }, t.TypeOfProps<{
        sha256: t.StringType;
    }>, t.OutputOfProps<{
        sha256: t.StringType;
    }>, unknown>>, unknown>;
}>, unknown>;
export declare type AppComponentContentsList = t.TypeOf<typeof AppComponentContentsList>;
export declare const AppComponentContentsRequest: t.InterfaceType<{
    uuid: t.RefinementType<t.StringType, string, string, unknown>;
    componentBundle: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion">)[], "app" | "companion", "app" | "companion", unknown>;
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, unknown>)[], string | number, string | number, unknown>;
}, t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, unknown>;
    componentBundle: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion">)[], "app" | "companion", "app" | "companion", unknown>;
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, unknown>)[], string | number, string | number, unknown>;
}>, t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, unknown>;
    componentBundle: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion">)[], "app" | "companion", "app" | "companion", unknown>;
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, unknown>)[], string | number, string | number, unknown>;
}>, unknown>;
export declare type AppComponentContentsRequest = t.TypeOf<typeof AppComponentContentsRequest>;
//# sourceMappingURL=ContentsList.d.ts.map