"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var t = require("io-ts");
exports.IOCapabilities = t.partial({
    write: t.boolean,
    additionalEncodings: t.array(t.string),
}, 'IOCapabilities');
exports.StreamToken = t.union([t.Integer, t.string], 'StreamToken');
exports.StreamOpenResponse = t.interface({
    stream: exports.StreamToken,
}, 'StreamOpenResponse');
exports.StreamCloseParams = t.interface({
    stream: exports.StreamToken,
}, 'StreamCloseParams');
exports.IOEncoding = t.union([
    t.literal('base64'),
    t.literal('none'),
]);
var NodeBufferType = (function (_super) {
    tslib_1.__extends(NodeBufferType, _super);
    function NodeBufferType() {
        var _this = _super.call(this, 'Buffer', function (m) { return Buffer.isBuffer(m); }, function (m, c) { return (_this.is(m) ? t.success(m) : t.failure(m, c)); }, t.identity) || this;
        _this._tag = 'NodeBufferType';
        return _this;
    }
    return NodeBufferType;
}(t.Type));
exports.NodeBufferType = NodeBufferType;
exports.NodeBuffer = new NodeBufferType();
exports.IOWriteParams = t.intersection([
    t.interface({
        stream: exports.StreamToken,
        data: t.union([
            t.string,
            exports.NodeBuffer,
        ]),
    }),
    t.partial({
        encoding: exports.IOEncoding,
    }),
], 'IOWriteParams');
//# sourceMappingURL=BulkData.js.map