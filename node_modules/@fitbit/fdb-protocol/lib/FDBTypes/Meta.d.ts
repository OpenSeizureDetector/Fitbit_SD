import * as t from 'io-ts';
export declare const ProtocolCapabilities: t.PartialType<{
    batchRequest: t.BooleanType;
    maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    additionalSerializations: t.ArrayType<t.StringType, string[], string[], unknown>;
}, t.TypeOfPartialProps<{
    batchRequest: t.BooleanType;
    maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    additionalSerializations: t.ArrayType<t.StringType, string[], string[], unknown>;
}>, t.OutputOfPartialProps<{
    batchRequest: t.BooleanType;
    maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    additionalSerializations: t.ArrayType<t.StringType, string[], string[], unknown>;
}>, unknown>;
export declare type ProtocolCapabilities = t.TypeOf<typeof ProtocolCapabilities>;
export declare const AdditionalSerializationCodec: t.UnionType<t.LiteralType<"cbor-definite">[], "cbor-definite", "cbor-definite", unknown>;
export declare type AdditionalSerializationType = t.TypeOf<typeof AdditionalSerializationCodec>;
export declare const SerializationType: t.UnionType<(t.UnionType<t.LiteralType<"cbor-definite">[], "cbor-definite", "cbor-definite", unknown> | t.LiteralType<"json">)[], "json" | "cbor-definite", "json" | "cbor-definite", unknown>;
export declare type SerializationType = t.TypeOf<typeof SerializationType>;
export declare const ProtocolSerializationChangeNotification: t.InterfaceType<{
    serialization: t.UnionType<(t.UnionType<t.LiteralType<"cbor-definite">[], "cbor-definite", "cbor-definite", unknown> | t.LiteralType<"json">)[], "json" | "cbor-definite", "json" | "cbor-definite", unknown>;
}, t.TypeOfProps<{
    serialization: t.UnionType<(t.UnionType<t.LiteralType<"cbor-definite">[], "cbor-definite", "cbor-definite", unknown> | t.LiteralType<"json">)[], "json" | "cbor-definite", "json" | "cbor-definite", unknown>;
}>, t.OutputOfProps<{
    serialization: t.UnionType<(t.UnionType<t.LiteralType<"cbor-definite">[], "cbor-definite", "cbor-definite", unknown> | t.LiteralType<"json">)[], "json" | "cbor-definite", "json" | "cbor-definite", unknown>;
}>, unknown>;
export declare type ProtocolSerializationChangeNotification = t.TypeOf<typeof ProtocolSerializationChangeNotification>;
//# sourceMappingURL=Meta.d.ts.map