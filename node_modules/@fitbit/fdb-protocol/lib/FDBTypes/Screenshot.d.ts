import * as t from 'io-ts';
export declare const ScreenshotCapabilities: t.IntersectionType<[t.PartialType<{
    stream: t.BooleanType;
}, t.TypeOfPartialProps<{
    stream: t.BooleanType;
}>, t.OutputOfPartialProps<{
    stream: t.BooleanType;
}>, unknown>, t.InterfaceType<{
    imageFormats: t.ArrayType<t.StringType, string[], string[], unknown>;
}, t.TypeOfProps<{
    imageFormats: t.ArrayType<t.StringType, string[], string[], unknown>;
}>, t.OutputOfProps<{
    imageFormats: t.ArrayType<t.StringType, string[], string[], unknown>;
}>, unknown>], t.TypeOfPartialProps<{
    stream: t.BooleanType;
}> & t.TypeOfProps<{
    imageFormats: t.ArrayType<t.StringType, string[], string[], unknown>;
}>, t.OutputOfPartialProps<{
    stream: t.BooleanType;
}> & t.OutputOfProps<{
    imageFormats: t.ArrayType<t.StringType, string[], string[], unknown>;
}>, unknown>;
export declare type ScreenshotCapabilities = t.TypeOf<typeof ScreenshotCapabilities>;
export declare const AppScreenshotStreamCaptureParams: t.InterfaceType<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, unknown>)[], string | number, string | number, unknown>;
    imageFormat: t.StringType;
}, t.TypeOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, unknown>)[], string | number, string | number, unknown>;
    imageFormat: t.StringType;
}>, t.OutputOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, unknown>)[], string | number, string | number, unknown>;
    imageFormat: t.StringType;
}>, unknown>;
export declare type AppScreenshotStreamCaptureParams = t.TypeOf<typeof AppScreenshotStreamCaptureParams>;
export declare const AppScreenshotStreamCaptureResult: t.PartialType<{
    length: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
}, t.TypeOfPartialProps<{
    length: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
}>, t.OutputOfPartialProps<{
    length: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
}>, unknown>;
export declare type AppScreenshotStreamCaptureResult = t.TypeOf<typeof AppScreenshotStreamCaptureResult>;
//# sourceMappingURL=Screenshot.d.ts.map