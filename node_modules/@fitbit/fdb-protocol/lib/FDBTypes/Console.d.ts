import * as t from 'io-ts';
export declare const ConsoleDebuggerCapabilities: t.PartialType<{
    appLogging: t.BooleanType;
}, t.TypeOfPartialProps<{
    appLogging: t.BooleanType;
}>, t.OutputOfPartialProps<{
    appLogging: t.BooleanType;
}>, unknown>;
export declare type ConsoleDebuggerCapabilities = t.TypeOf<typeof ConsoleDebuggerCapabilities>;
export declare const ConsoleMessageKind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", unknown>;
export declare type ConsoleMessageKind = t.TypeOf<typeof ConsoleMessageKind>;
export declare const ConsoleMessage: t.IntersectionType<[t.PartialType<{
    timestamp: t.NumberType;
    position: t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>;
    fromHost: t.BooleanType;
}, t.TypeOfPartialProps<{
    timestamp: t.NumberType;
    position: t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>;
    fromHost: t.BooleanType;
}>, t.OutputOfPartialProps<{
    timestamp: t.NumberType;
    position: t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>;
    fromHost: t.BooleanType;
}>, unknown>, t.InterfaceType<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}, t.TypeOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}>, t.OutputOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}>, unknown>], t.TypeOfPartialProps<{
    timestamp: t.NumberType;
    position: t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>;
    fromHost: t.BooleanType;
}> & t.TypeOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}>, t.OutputOfPartialProps<{
    timestamp: t.NumberType;
    position: t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>;
    fromHost: t.BooleanType;
}> & t.OutputOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}>, unknown>;
export declare type ConsoleMessage = t.TypeOf<typeof ConsoleMessage>;
export declare const TraceMessageKind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", unknown>;
export declare type TraceMessageKind = t.TypeOf<typeof TraceMessageKind>;
export declare const TraceMessage: t.IntersectionType<[t.InterfaceType<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>, (t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], (t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], unknown>;
    kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}, t.TypeOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>, (t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], (t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], unknown>;
    kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}>, t.OutputOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>, (t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], (t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], unknown>;
    kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}>, unknown>, t.PartialType<{
    timestamp: t.NumberType;
}, t.TypeOfPartialProps<{
    timestamp: t.NumberType;
}>, t.OutputOfPartialProps<{
    timestamp: t.NumberType;
}>, unknown>], t.TypeOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>, (t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], (t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], unknown>;
    kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}> & t.TypeOfPartialProps<{
    timestamp: t.NumberType;
}>, t.OutputOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }>, unknown>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>, unknown> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, unknown>;
        buildID: t.RefinementType<t.StringType, string, string, unknown>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", unknown>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, unknown>;
    stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }>, unknown>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, unknown>, (t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], (t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, unknown>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, unknown>, number, number, unknown>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], unknown>;
    kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", unknown>;
    message: t.ArrayType<t.AnyType, any[], any[], unknown>;
}> & t.OutputOfPartialProps<{
    timestamp: t.NumberType;
}>, unknown>;
export declare type TraceMessage = t.TypeOf<typeof TraceMessage>;
//# sourceMappingURL=Console.d.ts.map